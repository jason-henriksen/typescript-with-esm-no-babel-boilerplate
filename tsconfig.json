{
  "ts-node": {
    "moduleTypes": {
      "jest.config.ts": "cjs"
    },
    // To use swc: https://github.com/TypeStrong/ts-node#bundled-swc-integration
    "transpileOnly": true,
    "transpiler": "ts-node/transpilers/swc-experimental"
  },
  "compilerOptions": {
    // This was actually kind of a nightmare to figure out.
    // There is a LOT of outdated, incorrect advise out there.
    // there is/was an ESM vs CommonJS war that's made a huge mess, this seems to get us through it.
    "target": "esnext", // DO NOT CHANGE!
    "module": "esnext", // DO NOT CHANGE!
    "moduleResolution": "node",
    "allowJs": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "declaration": true,
    "strict": true,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* Enable strict null checks. */,
    "strictFunctionTypes": true /* Enable strict checking of function types. */,
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "importHelpers": true,
    "skipLibCheck": true,
    "outDir": "./dist/tsc/",
    "types": [
      "node",
      "jest"
    ],
    "lib": [
      "ES6",
      "DOM"
    ],
    "baseUrl": "./src",
    "paths": {
      "#lib/*": [
        "lib/*"
      ]
    }
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
  ],
  "exclude": [
    "node_modules",
    ".vscode"
  ]
}